# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
  import("//build/lite/ndk/ndk.gni")

  if (ohos_build_compiler == "clang" && ohos_kernel_type == "liteos_a") {
    copy("display_layer") {
      sources = [ "${board_name}/ohos/libdisplay_layer.so" ]
      outputs = [ "$root_out_dir/libdisplay_layer.so" ]
    }

    copy("display_gfx") {
      sources = [ "${board_name}/ohos/libdisplay_gfx.so" ]
      outputs = [ "$root_out_dir/libdisplay_gfx.so" ]
    }

    copy("display_gralloc") {
      sources = [ "${board_name}/ohos/libdisplay_gralloc.so" ]
      outputs = [ "$root_out_dir/libdisplay_gralloc.so" ]
    }
  } else if (ohos_build_compiler == "clang" && ohos_kernel_type == "linux") {
    copy("display_layer") {
      sources = [ "${board_name}/linux/libdisplay_layer.so" ]
      outputs = [ "$root_out_dir/libdisplay_layer.so" ]
    }

    copy("display_gfx") {
      sources = [ "${board_name}/linux/libdisplay_gfx.so" ]
      outputs = [ "$root_out_dir/libdisplay_gfx.so" ]
    }

    copy("display_gralloc") {
      sources = [ "${board_name}/linux/libdisplay_gralloc.so" ]
      outputs = [ "$root_out_dir/libdisplay_gralloc.so" ]
    }
  }

  if (ohos_build_ndk_target_host == "linux-x86_64" &&
      ohos_build_compiler == "gcc") {
    copy("display_layer") {
      sources = [ "${board_name}/gcc/libdisplay_layer.so" ]
      outputs = [ "$root_out_dir/libdisplay_layer.so" ]
    }

    copy("display_gfx") {
      sources = [ "${board_name}/gcc/libdisplay_gfx.so" ]
      outputs = [ "$root_out_dir/libdisplay_gfx.so" ]
    }

    copy("display_gralloc") {
      sources = [ "${board_name}/gcc/libdisplay_gralloc.so" ]
      outputs = [ "$root_out_dir/libdisplay_gralloc.so" ]
    }
  }

  group("hdi_display") {
    deps = [
      ":display_gfx",
      ":display_gralloc",
      ":display_layer",
    ]
  }
} else {
  import("//build/ohos.gni")

  ohos_prebuilt_shared_library("display_device") {
    if (target_cpu == "arm") {
      source = "hispark_taurus/linux_standard/lib/libdisplay_device.z.so"
    } else {
      source = "hispark_taurus/linux_standard/lib64/libdisplay_device.z.so"
    }
    subsystem_name = "hdf"
  }

  ohos_prebuilt_shared_library("display_gralloc") {
    if (target_cpu == "arm") {
      source =
          "hispark_taurus/linux_standard/lib/libdisplay_gralloc.z.so"
    } else {
      source =
          "hispark_taurus/linux_standard/lib64/libdisplay_gralloc.z.so"
    }
    subsystem_name = "hdf"
  }

  ohos_prebuilt_shared_library("display_gfx") {
    if (target_cpu == "arm") {
      source = "hispark_taurus/linux_standard/lib/libdisplay_gfx.z.so"
    } else {
      source = "hispark_taurus/linux_standard/lib64/libdisplay_gfx.z.so"
    }
    subsystem_name = "hdf"
  }

  ohos_prebuilt_shared_library("display_layer") {
    if (target_cpu == "arm") {
      source = "hispark_taurus/linux_standard/lib/libdisplay_layer.z.so"
    } else {
      source =
          "hispark_taurus/linux_standard/lib64/libdisplay_layer.z.so"
    }
    subsystem_name = "hdf"
  }

  ohos_prebuilt_shared_library("display_device_drm") {
    if (target_cpu == "arm") {
      source =
          "hispark_taurus/linux_standard/lib/libdisplay_device_drm.z.so"
    } else {
      source = "hispark_taurus/linux_standard/lib64/libdisplay_device_drm.z.so"
    }
    subsystem_name = "hdf"
  }
}
